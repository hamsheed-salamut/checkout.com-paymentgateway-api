@model  Merchant.WebUI.ViewModels.UserViewModel
@{
    ViewData["Title"] = "View";
}

<div class="container">
    <div class="row">
        <div class="span12">
            @using (Html.BeginForm("Authenticate", "Gateway", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(false)
                @Html.HiddenFor(model => model.Amount)
                @*@Html.HiddenFor(model => model.CustomerId);*@
                <form class="form-horizontal" action='' method="POST">
                    <fieldset>
                        <div id="legend">
                            <legend class="">Login</legend>
                        </div>
                        <div class="control-group">
                            <!-- Username -->
                            @Html.LabelFor(model => model.Email)
                            @*<label class="control-label" for="username">Username</label>*@
                            <div class="controls">
                                @Html.EditorFor(model => model.Email, new { @class = "input-xlarge" })
                                @*<input type="text" id="username" name="username" placeholder="" class="input-xlarge">*@
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="control-group">
                            <!-- Password-->
                            @Html.LabelFor(model => model.Password)
                            @*<label class="control-label" for="password">Password</label>*@
                            <div class="controls">
                                @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "input-xlarge", placeholder = "Password" } })
                                @*<input type="password" id="password" name="password" placeholder="" class="input-xlarge">*@
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br/>
                        <div class="control-group">
                            <!-- Button -->
                            <div class="controls">
                                <button class="btn btn-success js-login">Login</button>
                            </div>
                        </div>
                    </fieldset>
                </form>
            }

        </div>
    </div>
</div>

